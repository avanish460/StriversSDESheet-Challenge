import java.util.* ;
import java.io.*; 
public class Solution {

    static List<List<String>> result = new ArrayList<>();
    
    public static boolean isPalindrome(String s){
        int n = s.length();
        for(int i=0; i<n; i++){
            if(s.charAt(i) != s.charAt(n-i-1)){
                return false;
            }
        }
        return true;
    }
    public static List<List<String>> partition(String s) {
        // Write your code here.
        findPossiblePalindrome(new ArrayList<String>(), s, -1);
        return result;
    }
    
    static void findPossiblePalindrome(ArrayList<String> subList, String s, int start){
        
        if(start + 1 == s.length()){
            result.add(subList);
            return;
        }
        
        int n = s.length();
        for(int i=start+1; i<n; i++){
            
            if(isPalindrome(s.substring(start+1, i+1))){
                ArrayList<String> list = new ArrayList<>(subList);
                list.add(s.substring(start+1, i+1));
                findPossiblePalindrome(list, s, i);
            }
        }
    }
}